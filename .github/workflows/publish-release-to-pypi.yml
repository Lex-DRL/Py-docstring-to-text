# Prerequisites:
#
# - In GitHub repo - create the publishing environment (here, `pypi` / `testpypi`)
#   https://docs.github.com/en/actions/how-tos/deploy/configure-and-manage-deployments/manage-environments
#
# - Create a "Trusted Publisher" in the project settings on (test)PyPI
#   https://docs.pypi.org/trusted-publishers/adding-a-publisher/
#   https://pypi.org/manage/project/docstring-to-text/settings/publishing/

# Tutorials:
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
# https://www.youtube.com/watch?v=NMQwzI9hprg
# https://github.com/ArjanCodes/moneysnake/blob/main/.github/workflows/release.yaml

name: Publish Python üêç distribution üì¶ to PyPI

# ======= TRIGGERS =======
on:
  push:
    tags:
      # Trigger on tags with '[v]<int>.<int>whatever' pattern: 'v1.0.0', 'v2.1.4', etc
      # https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#filter-pattern-cheat-sheet
      # https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#onpushbranchestagsbranches-ignoretags-ignore
      - 'v[0-9]+.[0-9]**'
      - '[0-9]+.[0-9]**'

# ======= ENV VARS =======
env:
  # The name on PyPI:
  PACKAGE_NAME: 'docstring-to-text'

# ========= JOBS =========
jobs:

  # --------------------------------------------------------

  build:
    name: Build distribution üì¶
  # Just to be nice - let's check the GitHub user and prevent unwanted auto-runs on forks made solely for a PR.
    if: >-
      github.repository_owner == 'Lex-DRL'
    # Second condition: only run on tag pushes...
    # It was in the template from official tutorial, but it got redundant, since the only trigger is `on.push.tags`
    #  && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  # --------------------------------------------------------

#  publish-to-pypi:
#    name: >-
#      Publish Python üêç distribution üì¶ to PyPI
#    if: ${{ github.repository_owner == 'Lex-DRL' }}
#    needs:
#    - build  # Requires the previous 'build' job to succeed
#    runs-on: ubuntu-latest
#
#    environment:
#      name: pypi
#      url: https://pypi.org/p/${{ env.PACKAGE_NAME }}
#    permissions:
#      id-token: write  # IMPORTANT: mandatory for trusted publishing
#
#    steps:
#    - name: Download all the dists
#      uses: actions/download-artifact@v4
#      with:
#        name: python-package-distributions
#        path: dist/
#    - name: Publish distribution üì¶ to PyPI
#      uses: pypa/gh-action-pypi-publish@release/v1

  # --------------------------------------------------------

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    if: ${{ github.repository_owner == 'Lex-DRL' }}
    needs:
    - build  # Requires the previous 'build' job to succeed
    runs-on: ubuntu-latest

    environment:
      #name: testpypi
      # Yes, it's "not cool" to use the same environment for testing and publishing,
      # but in this particular repo I only use the TestPyPI for initial debugging of the workflow
      name: pypi
      url: https://test.pypi.org/p/${{ env.PACKAGE_NAME }}
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
